#ifndef VETOR_H
#define VETOR_H
/*TAD que possibilita representar vetores de float com aloca√ß√£o de mem√≥ria e manipula-los atrav√©s das fun√ß√µes abaixo.
autores:
Antonio Emerson Gomes Camelo - 555535
Wenderson Gabriel Sousa Mour„o - 537734
Eduardo Levi Portela Miranda - 537030
*/
typedef struct  vetor Vetor;

//Fun√ß√£o que cria um vetor de tamanho n.
Vetor* criaVetor(int n);

//Fun√ß√£o que libera a mem√≥ria alocada para um vetor.
void liberaVetor(Vetor* v);

//Fun√ß√£o que retorna o tamanho de um vetor.
int tamanhoVetor(Vetor* v);

//Fun√ß√£o que acessa o conte√∫do de uma determinada posi√ß√£o i do vetor.
float acessa(Vetor* v, int i);

//Fun√ß√£o que atribui um conte√∫do c a uma determinada posi√ß√£o i do vetor.
void atribui(Vetor* v, int i, float c);

//Fun√ß√£o que retorna o maior elementos do vetor.
float maior(Vetor* v);

//Fun√ß√£o que retorna o menor elementos do vetor.
float menor(Vetor* v);

//Fun√ß√£o que lista todos os elementos do vetor.
void listarVetor(Vetor* v);

//Fun√ß√£o que retorna a soma de todos os elementos de um vetor.
float somaVetor(Vetor* v);

//Fun√ß√£o que retorna a soma dos n primeiros elementos do vetor.
float somaElementos(Vetor* v, int n);

//Fun√ß√£o que retorna um vetor resultante da soma dos elementos correspondentes de dois vetores.
Vetor* somaVetores(Vetor* v1, Vetor* v2);

//Fun√ß√£o que mostra a soma dos elementos correspondentes de dois vetores do mesmo tamanho
void MostrarsomaVetores(Vetor* v1, Vetor* v2);
#endif

